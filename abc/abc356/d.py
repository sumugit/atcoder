import math

N, M = map(int, input().split())
MOD = 998244353
ans = 0

if M == 0:
    print(0)
    exit()

for i in range(int(math.log2(M))+1):
    # kを非負整数とすると、0以上k*2**(k+1)未満の整数のうち、j bit目が立っているものはk*2**j個ある
    # (列挙する分かるが、丁度半分が立っている)
    # ------------- ここまではできた ----------------
    # さらに、lを2**(j+1)未満の整数としたとき、k*2**(j+1)以上k*2**(j+1)+l以下の整数のうち、j bit目が立っているものは以下の2通り:
    # 1. l < 2**j 未満、0個
    # 2. 2**j <= l <= 2**(j+1) 未満、l-2**j+1個
    l = N%(1 << (i+1))
    if l >= 2**i:
        # N//(1<<(i+1))は00..011..1を1セットと見て、それが何セットあるか
        # そのビットセット内の1の数の合計は2**i個
        ans += bool(M & (1 << i)) * ((1 << i)*(N//(1<<(i+1))) + l-2**i+1)
    else:
        ans += bool(M & (1 << i)) * ((1 << i)*(N//(1<<(i+1))))
ans %= MOD
print(ans)
